{"ast":null,"code":"var _jsxFileName = \"/Users/aarushichitagi/Desktop/TPEO/full-stack-learning-repo-2022/Week_6/homework/frontend/src/pages/HomePage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, Fragment } from \"react\";\nimport { FaPlus } from \"react-icons/fa\";\nimport { AppShell, Navbar, Header, Footer, Aside, Text, MediaQuery, Burger, createStyles, useMantineTheme, Group, Center, Stack, Input, Button, Checkbox, Title } from \"@mantine/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const user = window.localStorage.getItem(\"username\");\n    fetch(\"http://localhost:4000/todo/\" + user, {\n      method: \"GET\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\",\n      // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\"\n        //Authorization: \"Bearer \" + \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFiYzEyMyIsImVtYWlsIjoiYWJjMTIzQGdtYWlsLmNvbSJ9.kVAp_XhgpFH3Iyl9cnRGUjRFYiBGuRuyYAztbNcRVLs\"\n      },\n\n      redirect: \"follow\",\n      // manual, *follow, error\n      referrerPolicy: \"no-referrer\" // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    }).then(resp => resp.json()).then(json => setTasks(json)).catch(err => {\n      console.log(err);\n    });\n\n    //  console.log(window.localStorage.getItem(\"username\"))\n  });\n\n  // taskName: a string of the name of task that you want to add; setToDo: a function that allows you to edit the taskName\n  const [taskName, setTaskName] = useState(\"\");\n  async function addTask() {\n    await fetch(\"http://localhost:4000/todo\", {\n      method: \"POST\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\",\n      // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\"\n        //Authorization: \"Bearer \" + \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFiYzEyMyIsImVtYWlsIjoiYWJjMTIzQGdtYWlsLmNvbSJ9.kVAp_XhgpFH3Iyl9cnRGUjRFYiBGuRuyYAztbNcRVLs\"\n      },\n\n      redirect: \"follow\",\n      // manual, *follow, error\n      referrerPolicy: \"no-referrer\",\n      // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      body: JSON.stringify({\n        todo: taskName,\n        email: window.localStorage.getItem(\"username\")\n      }) // body data type must match \"Content-Type\" header\n    }).then(resp => resp.json()).then(json => console.log(json)).catch(err => {\n      console.log(err);\n    });\n  }\n  async function updateTask(uid) {\n    await fetch(\"http://localhost:4000/todo\", {\n      method: \"DELETE\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\",\n      // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\"\n        //Authorization: \"Bearer \" + \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFiYzEyMyIsImVtYWlsIjoiYWJjMTIzQGdtYWlsLmNvbSJ9.kVAp_XhgpFH3Iyl9cnRGUjRFYiBGuRuyYAztbNcRVLs\"\n      },\n\n      redirect: \"follow\",\n      // manual, *follow, error\n      referrerPolicy: \"no-referrer\",\n      // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      body: JSON.stringify({\n        uid: uid\n      }) // body data type must match \"Content-Type\" header\n    }).then(resp => resp.json()).then(json => console.log(json)).catch(err => {\n      console.log(err);\n    });\n  }\n  function getSummary() {\n    let unfinishedTasks = 0;\n    tasks.forEach(task => {\n      if (task.finished === false) {\n        unfinishedTasks += 1;\n      }\n    });\n    if (unfinishedTasks === 1) {\n      return /*#__PURE__*/_jsxDEV(Title, {\n        order: 2,\n        children: \"You have 1 unfinished task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 14\n      }, this);\n    } else if (unfinishedTasks >= 1) {\n      return /*#__PURE__*/_jsxDEV(Title, {\n        order: 2,\n        children: [\"You have \", unfinishedTasks, \" tasks left to do\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    align: \"center\",\n    justify: \"center\",\n    p: \"xl\",\n    children: [getSummary(), /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: taskName,\n        placeholder: \"Type your task here\",\n        onChange: event => setTaskName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        rightIcon: /*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 28\n        }, this),\n        onClick: () => addTask(),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: task.finished,\n        index: index,\n        label: task.todo,\n        onChange: () => updateTask(task.uid)\n      }, task.uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"jRSxvGvDE9/tBBnqyD+ZVHhIzb8=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["useEffect","useState","Fragment","FaPlus","AppShell","Navbar","Header","Footer","Aside","Text","MediaQuery","Burger","createStyles","useMantineTheme","Group","Center","Stack","Input","Button","Checkbox","Title","HomePage","tasks","setTasks","user","window","localStorage","getItem","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","then","resp","json","catch","err","console","log","taskName","setTaskName","addTask","body","JSON","stringify","todo","email","updateTask","uid","getSummary","unfinishedTasks","forEach","task","finished","event","target","value","map","index"],"sources":["/Users/aarushichitagi/Desktop/TPEO/full-stack-learning-repo-2022/Week_6/homework/frontend/src/pages/HomePage.js"],"sourcesContent":["import { useEffect, useState, Fragment } from \"react\";\nimport { FaPlus } from \"react-icons/fa\";\n\nimport {\n  AppShell,\n  Navbar,\n  Header,\n  Footer,\n  Aside,\n  Text,\n  MediaQuery,\n  Burger,\n  createStyles,\n  useMantineTheme,\n  Group,\n  Center,\n  Stack,\n  Input,\n  Button,\n  Checkbox,\n  Title\n} from \"@mantine/core\";\n\nexport default function HomePage() {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const user = window.localStorage.getItem(\"username\");\n    fetch(\"http://localhost:4000/todo/\" + user, {\n      method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\",\n        //Authorization: \"Bearer \" + \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFiYzEyMyIsImVtYWlsIjoiYWJjMTIzQGdtYWlsLmNvbSJ9.kVAp_XhgpFH3Iyl9cnRGUjRFYiBGuRuyYAztbNcRVLs\"\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    })\n    .then(resp => resp.json())\n    .then(json => setTasks(json))\n    .catch((err) => {\n        console.log(err);\n      });\n\n    //  console.log(window.localStorage.getItem(\"username\"))\n\n  });\n\n  // taskName: a string of the name of task that you want to add; setToDo: a function that allows you to edit the taskName\n  const [taskName, setTaskName] = useState(\"\");\n\n\n  async function addTask() {\n    await fetch(\"http://localhost:4000/todo\", {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\",\n        //Authorization: \"Bearer \" + \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFiYzEyMyIsImVtYWlsIjoiYWJjMTIzQGdtYWlsLmNvbSJ9.kVAp_XhgpFH3Iyl9cnRGUjRFYiBGuRuyYAztbNcRVLs\"\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      body: JSON.stringify({  todo: taskName, email: window.localStorage.getItem(\"username\") }) // body data type must match \"Content-Type\" header\n    })\n    .then(resp => resp.json())\n    .then(json => console.log(json))\n    .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  async function updateTask(uid){\n    await fetch(\"http://localhost:4000/todo\", {\n      method: \"DELETE\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\",\n        //Authorization: \"Bearer \" + \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFiYzEyMyIsImVtYWlsIjoiYWJjMTIzQGdtYWlsLmNvbSJ9.kVAp_XhgpFH3Iyl9cnRGUjRFYiBGuRuyYAztbNcRVLs\"\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      body: JSON.stringify({  uid: uid }) // body data type must match \"Content-Type\" header\n    })\n    .then(resp => resp.json())\n    .then(json => console.log(json))\n    .catch((err) => {\n        console.log(err);\n      });\n\n  }\n\n  function getSummary() {\n    let unfinishedTasks = 0;\n    tasks.forEach((task) => {\n      if (task.finished === false) {\n        unfinishedTasks += 1;\n      }\n    });\n    if (unfinishedTasks === 1) {\n      return <Title order={2}>You have 1 unfinished task</Title>;\n    } else if (unfinishedTasks >= 1) {\n      return (\n        <Title order={2}>You have {unfinishedTasks} tasks left to do</Title>\n      );\n    }\n  }\n\n  return (\n    <Stack align=\"center\" justify=\"center\" p=\"xl\">\n      {getSummary()}\n      <Group>\n        <Input\n          value={taskName}\n          placeholder=\"Type your task here\"\n          onChange={(event) => setTaskName(event.target.value)}\n        ></Input>\n        <Button rightIcon={<FaPlus />} onClick={() => addTask()}>\n          Add\n        </Button>\n      </Group>\n      <Stack>\n        {tasks.map((task, index) => (\n          <Checkbox\n            checked={task.finished}\n            key={task.uid}\n            index={index}\n            label={task.todo}\n            onChange={() => updateTask(task.uid)}\n          ></Checkbox>\n        ))}\n      </Stack>\n    </Stack>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}